/*

Welcome to the solutions to the Groovy Playground exercise! You can run these
tasks by telling Gradle to use this build script, instead of the default
build.gradle. To run the task below, use:

    $ gradle -b solution.gradle stringsAndTypes

or, more compactly

    $ gradle -b solution.gradle sAT

*/

task stringsAndTypes {
    doLast {
        // TODO: Run `$ gradle sAT`
        println "Nice work abbreviating the task name"

        // TODO: Create a variable named foo and assign it the value 4.2
        def foo = 4.2

        // TODO: Print the value and class of foo
        println "Value is, $foo , and class is: ${foo.class}"

        // TODO: Use string interpolation to print the square root of 127
        // HINT: http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html
        def number = 127
        def root = Math.sqrt(number)
        println "Math.sqrt($number)"  // You use the $ only in parentheses
        println "The square root of $number is $root"

        // TODO: Assign the current date to foo and print it, along with its type
        // HINT:
        // http://docs.oracle.com/javase/7/docs/api/java/util/package-summary.html
        def foo2 = new java.util.Date()
        println "$foo2 is of type ${foo2.class}"


        // TODO: Use the `substring` method to extract my name from this string
        def hello = "Hello, Jeremy."

        // TODO: Use `toUpperCase` to capitalize and print my name
        def name = "Jeremy"
        println "$name".toUpperCase()

    }
}


task closures {
    doLast {
        // TODO: Declare a closure that takes two arguments and adds them together
        // HINT: http://www.groovy-lang.org/closures.html
        def thisClosure = {x, y -> x + y}

        // TODO: Call your closure with arguments 17 and 25, and print the result
        // Beware that something like `println addTwo 17, 25` is ambiguous
        def n1 = 17
        def n2 = 25
        println "Calling closure with numbers $n1 and $n2 gets this: ${thisClosure(17, 25)}"

    }
}

task lists {
    doLast {
        // TODO: Declare a list containing 5 of your favorite candies
        // HINT: Try searching for "groovy list literal"
        def candies = ["Peanut Chews", "Butterfingers", "Reeses Cups", "Crunch", "M&Ms", "Kit Kat"]

        // TODO: Create a new list of your candies in all caps
        // HINT: http://mrhaki.blogspot.ca/2010/05/groovy-goodness-use-collect-with.html
        def capCandies = candies.collect {it.toUpperCase()}

        // TODO: Print each capital candy
        println "$capCandies"

    }
}
